version: 2

refs:
  container: &container
    docker:
      - image: node:12
        environment:
          DATABASE_URL: "postgres://test-user@localhost:5432/test-db"
      - image: postgres:13
        environment:
          POSTGRES_USER: test-user
          POSTGRES_DB: test-db
          POSTGRES_HOST_AUTH_METHOD: trust

    working_directory: ~/repo

  steps:
    - &Install
      run:
        name: Install Dependencies
        command: yarn
    - &RestoreCache
      restore_cache:
        name: Restore Dependencies Cache
        keys:
          - yarn-packages-{{ checksum "yarn.lock" }}
          - yarn-packages- # used if checksum fails
    - &SaveCache
      save_cache:
        name: Save Dependencies Cache
        key: yarn-packages-{{ checksum "yarn.lock" }}
        paths:
          - node_modules
    - &Test
      run:
        name: Test
        command: yarn test
    - &Report
      run:
        name: Report
        command: yarn report

jobs:
  test:
    <<: *container
    steps:
      - checkout
      - *RestoreCache
      - *Install
      - *SaveCache
      - *Test
  report:
    <<: *container
    steps:
      - checkout
      - *RestoreCache
      - *Install
      - *SaveCache
      - *Report
  deploy:
    <<: *container
    steps:
      - checkout
      - *RestoreCache
      - *Install
      - *SaveCache
      - run:
          name: Build
          command: yarn build
      - run:
          name: Set registry URL
          command: npm set registry https://registry.npmjs.org/
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  all:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - report:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
